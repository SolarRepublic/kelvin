
	const f_subschema_edit = (k, [xc_type]: [ChangeType]) => ({
		account: k.ref(),
		type: k.int(xc_type),
		change: k.switch('type', xc_type, k => ({
			[ChangeType.UNKNOWN]: k.int(),
			[ChangeType.ATTRIBUTE]: k.struct(k => ({
				key: k.str(),
				old: k.str(),
				new: k.str(),
			})),
			[ChangeType.CONTACT]: k.struct(k => ({
				edge: k.str(),
				old: k.ref<Contact>(),
				new: k.ref<Contact>(),
			})),
		})),
	});

	const Incidents = new ItemController({
		client: k_client,
		domain: 'incidents',

		schema: (k, [xc_type, si_id]: [IncidentType, string]) => ({
			type: k.int(xc_type),
			id: k.str(si_id),
			time: k.int(),
			data: k.switch('type', xc_type, k => ({
				[IncidentType.UNKNOWN]: k.int(),
				[IncidentType.ACCOUNT_CREATED]: k.ref<Account>(),
				[IncidentType.ACCOUNT_EDITED]: k.struct(f_subschema_edit),
			})),
		}),


		// index: (g_item) => {
		// 	const h_indexes: Record<IndexLabel, Set<IndexValue>> = {};

		// 	// transaction
		// 	if([IncidentType.ACCOUNT_CREATED, IncidentType.ACCOUNT_EDITED].includes(g_item.type)) {
		// 		// index sender
		// 		h_indexes[''] = 
		// 	}
		// },
	});